{"version":3,"file":"static/js/907.f583cc21.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts-page.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactFormStyle = styled.div`\n  /* display: block; */\n  text-align: center;\n  width: 100%;\n  margin-bottom: 30px;\n`;\nexport const Input = styled(Field)`\n  border-radius: 4px;\n  padding: 5px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  /* margin-left: 30px; */\n  &:hover,\n  &:active,\n  &:focus-visible {\n    border-color: violet;\n    border: 2px solid violet;\n    outline: none;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  align-items: center;\n  gap: 20px;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  /* display: flex;\n  align-items: baseline; */\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\nexport const ContactFormBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const FormItem = styled.div`\n  width: 300px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  gap: 20px;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase().trim()) ||\n        contact.number.includes(filter.trim())\n    );\n  }\n);\n","import { Formik, ErrorMessage } from 'formik';\nimport Notiflix from 'notiflix';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nimport {\n  Input,\n  StyledForm,\n  Label,\n  ContactFormStyle,\n  FormTitle,\n  ContactFormBtn,\n  FormItem,\n} from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    console.log(value);\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === value.name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${value.name} is alredy in contacts.`);\n      resetForm();\n      return;\n    } else if (\n      contacts.find(contact => contact.number.toString() === value.number)\n    ) {\n      Notiflix.Notify.failure(`${value.number} is alredy in contacts.`);\n      resetForm();\n      return;\n    }\n    dispatch(addContact(value));\n    Notiflix.Notify.success(`Contact added`);\n    resetForm();\n  };\n\n  return (\n    <ContactFormStyle>\n      <FormTitle>Phonebook</FormTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <FormItem>\n            <Label>Name:</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              placeholder=\"Enter contact name\"\n            />\n            <ErrorMessage name=\"name\">\n              {() => Notiflix.Notify.failure('Name is required field')}\n            </ErrorMessage>\n          </FormItem>\n          <FormItem>\n            <Label>Telephone:</Label>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              placeholder=\"Enter contact phone\"\n            />\n            <ErrorMessage name=\"number\">\n              {() => Notiflix.Notify.failure('Number is required field')}\n            </ErrorMessage>\n          </FormItem>\n\n          <ContactFormBtn type=\"submit\">Add contact</ContactFormBtn>\n        </StyledForm>\n      </Formik>\n    </ContactFormStyle>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport Notiflix from 'notiflix';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    console.log(contact.id);\n    dispatch(deleteContact(contact.id));\n    Notiflix.Notify.warning(`Contact deleted`);\n  };\n\n  return (\n    <>\n      {contact.name} : {contact.number}\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  font-size: 18px;\n  font-weight: 400;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 30px;\n`;\nexport const ContactListBox = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  width: 100%;\n`;\n","import Contact from '../Contact';\nimport { List, ListItem, ContactListBox } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactListBox>\n      <List>\n        {filteredContacts.map(contact => {\n          return (\n            <ListItem key={contact.id}>\n              <Contact contact={contact} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </ContactListBox>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  display: block;\n\n  border-radius: 4px;\n  padding: 5px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  &:hover,\n  &:active,\n  &:focus-visible {\n    border-color: violet;\n    border: 2px solid violet;\n    outline: none;\n  }\n`;\nexport const FilterLabel = styled.label`\n  display: flex;\n`;\n","import { FilterInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contacts-filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n    console.log(e.target.value);\n  };\n  return (\n    <>\n      <label>\n        <FilterInput\n          type=\"text\"\n          onChange={onFilterChange}\n          placeholder=\"Name or phone to seach...\"\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { SectionBox, Title } from 'components/Section/SectionTitle.styled';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContact } from 'redux/contacts/contacts-operations';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts-selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n  return (\n    <SectionBox>\n      <ContactForm />\n      <div>{isLoading && !error && 'Request in progress....'}</div>\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </SectionBox>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactFormStyle","styled","Input","Field","StyledForm","Form","Label","FormTitle","ContactFormBtn","FormItem","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","trim","number","schema","yup","shape","required","initialValues","useSelector","dispatch","useDispatch","onSubmit","value","resetForm","console","log","find","Notiflix","toString","addContact","validationSchema","type","pattern","title","placeholder","onClick","id","deleteContact","List","ListItem","ContactListBox","filteredContacts","map","FilterInput","onChange","e","setFilter","target","useEffect","fetchContact"],"sourceRoot":""}