{"version":3,"file":"static/js/220.1c6facd1.chunk.js","mappings":"uWAGaA,EAAmBC,EAAAA,GAAAA,IAAH,gHAMhBC,GAAQD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,yQAcLG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yIAOVK,EAAQL,EAAAA,GAAAA,MAAH,8FAMLM,EAAYN,EAAAA,GAAAA,GAAH,yFAKTO,EAAiBP,EAAAA,GAAAA,OAAH,qEAIdQ,EAAWR,EAAAA,GAAAA,IAAH,qI,mIC9BfS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aA8CzB,UA3CiB,WACf,IAAMG,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,wBACA,SAAC,KAAD,CACEC,cAAe,CAAEH,SAAU,GAAID,MAAO,GAAIF,KAAM,IAChDO,SATe,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC7BL,EAASM,EAAAA,QAAAA,UAAA,UAA6BF,KACtCC,GACD,EAOKE,iBAAkBd,EAHpB,UAKE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,SAAC,KAAD,CAAOe,KAAK,OAAOZ,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAnB,SACG,kBAAMa,IAAAA,OAAAA,QAAwB,yBAA9B,QAGL,UAAC,KAAD,YACE,SAAC,KAAD,sBACA,SAAC,KAAD,CAAOD,KAAK,QAAQZ,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAnB,SACG,kBAAMa,IAAAA,OAAAA,QAAwB,0BAA9B,QAGL,UAAC,KAAD,YACE,SAAC,KAAD,yBACA,SAAC,KAAD,CAAOD,KAAK,WAAWZ,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAnB,SACG,kBAAMa,IAAAA,OAAAA,QAAwB,6BAA9B,QAGL,SAAC,KAAD,CAAgBD,KAAK,SAArB,6BAKT,C","sources":["components/ContactForm/ContactForm.styled.js","pages/Register-page.js"],"sourcesContent":["import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactFormStyle = styled.div`\n  /* display: block; */\n  text-align: center;\n  width: 100%;\n  margin-bottom: 30px;\n`;\nexport const Input = styled(Field)`\n  border-radius: 4px;\n  padding: 5px;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  /* margin-left: 30px; */\n  &:hover,\n  &:active,\n  &:focus-visible {\n    border-color: violet;\n    border: 2px solid violet;\n    outline: none;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  align-items: center;\n  gap: 20px;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  /* display: flex;\n  align-items: baseline; */\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\nexport const ContactFormBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const FormItem = styled.div`\n  width: 300px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  gap: 20px;\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport Notiflix from 'notiflix';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport {\n  Input,\n  StyledForm,\n  Label,\n  FormTitle,\n  ContactFormBtn,\n  FormItem,\n} from '../components/ContactForm/ContactForm.styled';\nimport { SectionBox } from '../components/Section/SectionTitle.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (value, { resetForm }) => {\n    dispatch(authOperations.register({ ...value }));\n    resetForm();\n  };\n  return (\n    <SectionBox>\n      <FormTitle>Register</FormTitle>\n      <Formik\n        initialValues={{ password: '', email: '', name: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <StyledForm>\n          <FormItem>\n            <Label>Name:</Label>\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\">\n              {() => Notiflix.Notify.failure('Name is required field')}\n            </ErrorMessage>\n          </FormItem>\n          <FormItem>\n            <Label>Email:</Label>\n            <Input type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\">\n              {() => Notiflix.Notify.failure('Email is required field')}\n            </ErrorMessage>\n          </FormItem>\n          <FormItem>\n            <Label>Password:</Label>\n            <Input type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\">\n              {() => Notiflix.Notify.failure('Password is required field')}\n            </ErrorMessage>\n          </FormItem>\n          <ContactFormBtn type=\"submit\">Register</ContactFormBtn>\n        </StyledForm>\n      </Formik>\n    </SectionBox>\n  );\n};\n\nexport default Register;\n"],"names":["ContactFormStyle","styled","Input","Field","StyledForm","Form","Label","FormTitle","ContactFormBtn","FormItem","schema","yup","shape","name","required","email","password","dispatch","useDispatch","initialValues","onSubmit","value","resetForm","authOperations","validationSchema","type","Notiflix"],"sourceRoot":""}